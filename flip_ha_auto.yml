---
# flip_ha_auto.yml - Automatically detect and flip active/passive Palo Alto firewalls
#
# Description
# ===========
# This playbook automatically detects the active member in a Palo Alto HA pair
# and flips the HA state by suspending the active device and waiting for
# the passive to become active.
#
# Usage
# =====
# Example:
#   ansible-playbook -i inventory flip_ha_auto.yml --extra-vars "target=ha_pair username=admin password=changeme"
#
# Required Variables:
#   target: Target host group (e.g., ha_pair)
#   username, password or api_key
#
# Notes
# =====
# - HA preemption must be disabled
# - Assumes both HA peers are reachable

- hosts: "{{ target | default('ha_pair') }}"
  connection: local
  gather_facts: false

  tasks:

    - name: Determine which firewall is active in HA
      paloaltonetworks.panos.panos_active_in_ha:
        ip_address: "{{ item }}"
        username: "{{ username | default(omit) }}"
        password: "{{ password | default(omit) }}"
      loop:
        - "{{ inventory_ip_address }}"
        - "{{ primary_ip_address }}"
        - "{{ secondary_ip_address }}"
      register: ha_status

    - name: Set active/passive devices dynamically
      set_fact:
        active_fw: "{{ (ha_status.results | selectattr('response.active', 'equalto', true) | list | first).item }}"
        passive_fw: "{{ (ha_status.results | selectattr('response.active', 'equalto', false) | list | first).item }}"
      when: ha_status.results | length > 0
      ignore_errors: true

    - name: Run tasks dedicated to active node
      ansible.builtin.include_tasks: flip_ha_auto_active.yml
      when: ha_status.response.active

