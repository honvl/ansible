---
- name: Auto flap switchport for offline endpoint
  hosts: localhost
  gather_facts: no

  vars:
    hostname: "{{ hostname }}"
    nios_provider:
      host: "{{ infoblox_host }}"
      username: "{{ infoblox_user }}"
      password: "{{ infoblox_pass }}"
      validate_certs: false

  tasks:
    - name: Get host record from Infoblox (lookup plugin)
      ansible.builtin.set_fact:
        host_record: >-
          {{ lookup('infoblox.nios_modules.nios_lookup',
                    'record:host',
                    filter={'name': hostname},
                    provider=nios_provider) }}

    - name: Extract IP
      set_fact:
        ip_addr: "{{ host_record[0].ipv4addrs[0].ipv4addr | default('N/A') }}"

    - debug:
        msg: "Resolved {{ hostname }} to {{ ip_addr }}"

    - name: Get ClearPass token
      uri:
        url: "https://{{ clearpass_host }}/api/oauth"
        method: POST
        body_format: json
        body:
          grant_type: "client_credentials"
          client_id: "{{ clearpass_client_id }}"
          client_secret: "{{ clearpass_client_secret }}"
      register: auth
      no_log: true

    - name: Get endpoint details from ClearPass
      uri:
        url: "https://{{ clearpass_host }}/api/endpoint/ip/{{ ip_addr }}"
        method: GET
        headers:
          Authorization: "Bearer {{ auth.json.access_token }}"
        validate_certs: false
      register: endpoint_info

    - name: Flap interface
      ios_interface:
        name: "{{ endpoint_info.json.port_id }}"
        enabled: false
        provider:
          host: "{{ endpoint_info.json.switch_ip }}"
          username: "{{ ios_user }}"
          password: "{{ ios_pass }}"
      delegate_to: localhost

    - pause: seconds=3

    - name: Re-enable interface
      ios_interface:
        name: "{{ endpoint_info.json.port_id }}"
        enabled: true
        provider:
          host: "{{ endpoint_info.json.switch_ip }}"
          username: "{{ ios_user }}"
          password: "{{ ios_pass }}"
      delegate_to: localhost