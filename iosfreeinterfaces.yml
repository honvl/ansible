- name: Check for free Cisco switch interfaces
  hosts: all
  gather_facts: false
   
  vars:
    output_path: "/home/ansiblereports/"
    filename: "free_interfaces_{{ date }}.csv"
    filename2: "free_interfaces2_{{ date }}.csv"

  tasks:

    - name: CSV - Generate output filename
      set_fact: 
        date="{{lookup('pipe','date +%Y%m%d')}}"
      run_once: true

    - name: Delete old content
      ansible.builtin.file:
        state: absent
        path: "{{ output_path }}/{{ filename }}"

    - name: CSV - Create file and set the header
      lineinfile:
        dest: "{{ output_path }}/{{ filename }}"
        line: hostname,interface,description,lineprotocol,operstatus,accessvlan,voicevlan
        create: yes
        state: present
    - name: IOS Facts
      cisco.ios.ios_facts:
        gather_network_resources: l2_interfaces
        gather_subset: all
      register: fact
    
    - name: CSV - Write information into .csv file
      lineinfile:
        insertafter: EOF
        dest: "{{ output_path }}/{{ filename }}"
        line: "{{ fact['ansible_facts'].ansible_net_hostname }},{{ item.key }},{{ item.value.description | default('') }},{{ item.value.lineprotocol }},{{ item.value.operstatus }},'',''"
      loop: "{{ fact['ansible_facts']['ansible_net_interfaces'] | dict2items }}"
      when: item.value.lineprotocol == "down"
      loop_control:
        loop_var: item

    - name: CSV - Blank lines removal
      lineinfile:
        path: "{{ output_path }}/{{ filename }}"
        state: absent
        regex: '^\s*$'

    - name: show int counters
      cisco.ios.ios_command:
        commands: show int counters
      register: counters_output

    - name: Write counters into file2
      local_action: copy content="{{ counters_output.stdout[0] }}" dest="{{ output_path }}/{{ filename2 }}"

    - name: Replace old interface name with abbreviated interface name
      ansible.builtin.replace:
        path: "{{ output_path }}/{{ filename }}"
        regexp: 'TenGigabitEthernet'
        replace: 'Te'    

    - name: Replace old interface name with abbreviated interface name
      ansible.builtin.replace:
        path: "{{ output_path }}/{{ filename }}"
        regexp: 'GigabitEthernet'
        replace: 'Gi'    

    - name: Replace whitespace with commas to make csv
      ansible.builtin.replace:
        path: "{{ output_path }}/{{ filename2 }}"
        regexp: ' *'
        replace: ',' 



        